{"version":3,"sources":["components/main_example/post.jsx","components/main_example/loader.jsx","components/main_example/notif.jsx","components/main_example/sort.jsx","functions/functions.jsx","components/main_example/search.jsx","components/main_example/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Post","props","updateData","data","item","find","id","state","title","body","setData","setAction","handleOnClick","setActivePost","index","loaded","visible","action","ref","React","createRef","observer","IntersectionObserver","intersectionRatio","setState","postData","replace","root","rootMargin","threshold","this","current","setTimeout","observe","nextProps","nextState","active","className","onClick","removePost","Fragment","type","defaultValue","onChange","e","target","value","placeholder","Component","Loader","PureComponent","Notif","setShowNotif","show","style","background","color","text","memo","useState","sortType","setSortType","useEffect","posts","sort","a","b","localeCompare","debounce","func","wait","timeout","args","later","clearTimeout","useRef","searchTerm","toLowerCase","trim","filteredPosts","JSON","parse","localStorage","getItem","filter","includes","handleInput","activePost","notif","setNotif","showNotif","setItem","stringify","items","targetPost","splice","indexOf","handleNotif","newPost","ids","map","Math","max","handlePostId","newData","addNewPost","length","key","App","window","scrollTo","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d6fc4aa2.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\n\nclass Post extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloaded: false,\n\t\t\tvisible: false,\n\t\t\taction: null,\n\t\t\ttitle: '',\n\t\t\tbody: '',\n\t\t\tid: ''\n\t\t};\n\n\t\tthis.ref = React.createRef('');\n\t}\n\n\tasync componentDidMount() {\n\t\tconst observer = new IntersectionObserver(\n\t\t\t([ item ]) => {\n\t\t\t\tif (item.intersectionRatio === 1) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tloaded: true,\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\ttitle: this.props.postData.title,\n\t\t\t\t\t\tbody: this.props.postData.body.replace(/\\n/g, ' '),\n\t\t\t\t\t\tid: this.props.postData.id\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ root: null, rootMargin: '50px', threshold: 1.0 }\n\t\t);\n\n\t\tif (this.ref.current) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tobserver.observe(this.ref.current);\n\t\t\t}, 10);\n\t\t}\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn (\n\t\t\tnextProps.postData !== this.props.postData ||\n\t\t\tnextProps.active !== this.props.active ||\n\t\t\tthis.state !== nextState ||\n\t\t\tthis.state.visible !== nextState.visible\n\t\t);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.action) {\n\t\t\tthis.updateData();\n\t\t\treturn () => {\n\t\t\t\tthis.setState({ action: null });\n\t\t\t};\n\t\t}\n\t}\n\n\tupdateData = () => {\n\t\tlet data = [ ...this.props.data ];\n\t\tlet item = data.find((item) => item.id === this.state.id);\n\t\titem.title = this.state.title;\n\t\titem.body = this.state.body;\n\t\tthis.props.setData(data);\n\t\tthis.props.setAction('update');\n\t};\n\n\thandleOnClick = () => {\n\t\tthis.props.setActivePost(this.props.index);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.ref} className={`loading-wrapper ${this.state.visible ? 'visible' : 'hidden'}`}>\n\t\t\t\t{this.state.visible && (\n\t\t\t\t\t<div className={`post ${this.props.active && 'post--active'}`} onClick={this.handleOnClick}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"post__remove\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.props.removePost(this.props.index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t√ó\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<small>ID: {this.state.id}</small>\n\t\t\t\t\t\t{!this.props.active ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<h3>{this.state.title}</h3>\n\t\t\t\t\t\t\t\t<p>{this.state.body}</p>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.title}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ title: e.target.value, action: 'update' });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder={'Dodaj naslov'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ body: e.target.value, action: 'update' });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.body}\n\t\t\t\t\t\t\t\t\t\tplaceholder={'Dodaj opis'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Post;\n","import React, { PureComponent } from 'react';\n\nclass Loader extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"loader\">\n\t\t\t\t...\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Loader;","import React, { PureComponent } from 'react';\n\nclass Notif extends PureComponent {\n\n\tcomponentDidUpdate() {\n\t\tsetTimeout(() => {\n\t\t\tthis.props.setShowNotif(false);\n\t\t}, 3000);\n\t}\n\n\trender() {\n\t\tif (this.props.show) {\n\t\t\treturn <div style={{background: this.props.color}} className=\"notif\">{this.props.text}</div>;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport default Notif;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction Sort(props) {\n\tconst [ sortType, setSortType ] = useState({\n\t\ttype: 'id',\n\t\tvalue: false\n\t});\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlet posts = [ ...props.data ];\n\n\t\t\tif (sortType.type === 'id') {\n\t\t\t\tsortType.value ? posts.sort((a, b) => a.id - b.id) : posts.sort((a, b) => b.id - a.id);\n\t\t\t} else {\n\t\t\t\tsortType.value\n\t\t\t\t\t? posts.sort((a, b) => a.title.localeCompare(b.title))\n\t\t\t\t\t: posts.sort((a, b) => b.title.localeCompare(a.title));\n\t\t\t}\n\n\t\t\tprops.setData(posts);\n\t\t},\n\t\t[ sortType ]\n\t);\n\n\tconst sortById = () => {\n\t\tsetSortType({\n\t\t\ttype: 'id',\n\t\t\tvalue: !sortType.value\n\t\t});\n\t};\n\n\tconst sortByAlphabet = () => {\n\t\tsetSortType({\n\t\t\ttype: 'letter',\n\t\t\tvalue: !sortType.value\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"sort\">\n\t\t\t<div>\n\t\t\t\tPoredak:&nbsp;\n\t\t\t\t<strong>\n\t\t\t\t\t{sortType.type === 'letter' ? (\n\t\t\t\t\t\t<span>{sortType.value ? <span>A-≈Ω</span> : <span>≈Ω-A</span>}</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span>{sortType.value ? <span>1-10</span> : <span>10-1</span>}</span>\n\t\t\t\t\t)}\n\t\t\t\t</strong>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`btn btn--sort ${sortType.type === 'letter' ? 'btn--active' : ''}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsortByAlphabet();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAbecedno\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`btn btn--sort ${sortType.type === 'id' ? 'btn--active' : ''}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsortById();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tPrema starosti\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default React.memo(Sort);\n","export const debounce = (func, wait) => {\n\tlet timeout;\n\n\treturn function executedFunction(...args) {\n\t\tconst later = () => {\n\t\t\tclearTimeout(timeout);\n\t\t\tfunc(...args);\n\t\t};\n\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t};\n};","import React, { useRef } from 'react';\nimport { debounce } from '../../functions/functions';\n\nconst Search = (props) => {\n\tconst ref = useRef('');\n\n\tconst handleInput = () => {\n\t\tif (ref.current) {\n\t\t\tlet searchTerm = ref.current.value.toLowerCase().trim();\n\t\t\tlet posts = JSON.parse(localStorage.getItem('data'));\n\t\t\tlet filteredPosts = posts.filter(\n\t\t\t\t(item) => item.title.toLowerCase().includes(searchTerm) || item.body.toLowerCase().includes(searchTerm)\n\t\t\t);\n\t\t\tprops.setData(filteredPosts);\n\t\t}\n\t};\n\n\treturn (\n\t\t<form className=\"search\">\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Pretra≈æivanje\"\n\t\t\t\tclassName=\"search__input\"\n\t\t\t\tonChange={debounce(() => {\n\t\t\t\t\thandleInput()\n\t\t\t\t}, 220)}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default React.memo(Search);\n","import React, { useState, useEffect } from 'react';\nimport Post from './post';\nimport Loader from './loader';\nimport Notif from './notif';\nimport Sort from './sort';\nimport Search from './search';\n\nconst Index = (props) => {\n\tconst [ data, setData ] = useState(null);\n\tconst [ activePost, setActivePost ] = useState(null);\n\tconst [ notif, setNotif ] = useState({ text: '', type: '', color: '' });\n\tconst [ action, setAction ] = useState(null);\n\tconst [ showNotif, setShowNotif ] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet posts = JSON.parse(localStorage.getItem('data'));\n\t\tsetData(posts);\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (action === 'update') {\n\t\t\t\tlocalStorage.setItem('data', JSON.stringify(data))\n\t\t\t}\n\n\t\t\treturn () => {\n\t\t\t\tsetAction(null);\n\t\t\t};\n\t\t},\n\t\t[ data ]\n\t);\n\n\tconst addNewPost = () => {\n\t\tconst handlePostId = (items) => {\n\t\t\tlet ids = [ ...items ].map((item) => item.id);\n\t\t\treturn (ids = Math.max(...ids) + 1);\n\t\t};\n\n\t\tlet newPost = {\n\t\t\tid: handlePostId(data),\n\t\t\ttitle: 'Nova objava',\n\t\t\tbody: ''\n\t\t};\n\n\t\tlet newData = [ newPost, ...data ];\n\t\thandleNotif(`Dodana nova objava: ID: ${newPost.id}`, 'add', '#4CAF50');\n\t\tsetData(newData);\n\t\tsetAction('update');\n\t};\n\n\tconst removePost = (index) => {\n\t\tlet posts = [ ...data ];\n\t\tlet targetPost = posts.find((item) => item.id === index);\n\t\tposts.splice(posts.indexOf(targetPost), 1);\n\t\thandleNotif(`Obrisana objava: ID: ${targetPost.id}`, 'remove', '#F44336');\n\t\tsetData(posts);\n\t\tsetAction('update');\n\t};\n\n\tconst handleNotif = (text, type, color) => {\n\t\tsetNotif({\n\t\t\ttext: text,\n\t\t\ttype: type,\n\t\t\tcolor: color\n\t\t});\n\t\tsetShowNotif(true);\n\t};\n\n\tconst mapData = (items) => {\n\t\treturn (\n\t\t\titems &&\n\t\t\t[ ...items ].map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Post\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\tindex={item.id}\n\t\t\t\t\t\tpostData={item}\n\t\t\t\t\t\tactive={activePost === item.id}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tsetData={setData}\n\t\t\t\t\t\tsetAction={setAction}\n\t\t\t\t\t\tsetActivePost={setActivePost}\n\t\t\t\t\t\tremovePost={removePost}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t};\n\n\tif (data) {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"layout\">\n\t\t\t\t\t<Search data={data} setData={setData} />\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\taddNewPost();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDodaj\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<Sort data={data} setData={setData} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>Broj rezultata: {data.length}</p>\n\t\t\t\t\t<div className=\"posts\">{mapData(data)}</div>\n\t\t\t\t</div>\n\t\t\t\t<Notif\n\t\t\t\t\ttext={notif.text}\n\t\t\t\t\ttype={notif.type}\n\t\t\t\t\tcolor={notif.color}\n\t\t\t\t\tshow={showNotif}\n\t\t\t\t\tsetShowNotif={setShowNotif}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t} else {\n\t\treturn <Loader />;\n\t}\n};\n\nexport default React.memo(Index);\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport data from './posts.json';\n//import KlasnaKomponenta from './components/basic_examples/class_component';\n//import FunkcijskaKomponenta from './components/basic_examples/function_component';\n//import KlasnaKomponentaLifeCycle from './components/basic_examples/class_component_lifecycle';\n//import NestedComponentExample from './components/basic_examples/nesting_example';\n//import FunctionComponentLifecycle from './components/basic_examples/function_component_lifecycle';\n//import InteractionExample from './components/basic_examples/interaction_example';\n//import ComplexData from './components/main_example';\n//import Fragments from './components/fragments'\n//import Update from './components/should_component_update'\n//import Immutability from './components/immutability'\n//import Conditional from './components/conditional_rendering'\n\nimport MainExample from './components/main_example';\n\nfunction App() {\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0);\n\n\t\tif (!localStorage.getItem('data')) {\n\t\t\tlocalStorage.setItem('data', JSON.stringify(data));\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>Diplomski rad</h1>\n\t\t\t\t<h2>Nikola Miliƒá</h2>\n\t\t\t</header>\n\t\t\t<article>\n\t\t\t\t<MainExample />\n\t\t\t\t{/* <section>\n          <small>Osnovni primjeri komponenti</small>\n          <KlasnaKomponenta value=\"Props klasne komponente\" />\n          <FunkcijskaKomponenta value=\"Props function komponente\" />\n        </section>\n        <section>\n          <small>Osnovni primjeri podkomponenti</small>\n          <NestedComponentExample value=\"Props \t komponente\" />\n\t\t\t\t\t<InteractionExample />\n        </section>\n        <section>\n          <small>≈Ωivotni ciklus komponente</small>\n          <KlasnaKomponentaLifeCycle value={\"Props lifecycle class komponente\"} />\n          <FunctionComponentLifecycle value={\"Props lifecycle class komponente\"} />\n        </section>\n        <section>\n          <small>React.Fragment</small>\n\t\t\t\t\t<Fragments />\n        </section>\n\t\t\t\t<section>\n          <small>shouldComponentUpdate primjer</small>\n\t\t\t\t\t<Update />\n        </section>\n        <section>\n          <small>Immutabiltity</small>\n\t\t\t\t\t<Immutability />\n        </section>\n        <section>\n          <small>Immutabiltity</small>\n\t\t\t\t\t<Immutability />\n        </section>\n\t\t\t\t<section>\n          <small>Kompleksni podaci</small>\n          <ComplexData />\n        </section> */}\n\t\t\t</article>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}