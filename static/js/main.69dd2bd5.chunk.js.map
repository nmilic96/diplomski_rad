{"version":3,"sources":["components/main_example/post.jsx","components/main_example/loader.jsx","components/main_example/notif.jsx","components/main_example/sort.jsx","components/main_example/search.jsx","components/main_example/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Post","props","handleOnClick","setActivePost","index","state","visible","title","body","id","ref","React","createRef","observer","IntersectionObserver","intersectionRatio","setState","postData","replace","root","rootMargin","threshold","this","current","observe","nextProps","nextState","active","className","onClick","removePost","Fragment","type","defaultValue","onChange","e","target","value","placeholder","Component","Loader","PureComponent","Notif","setTimeout","setShowNotif","show","style","background","color","text","Sort","useState","sortType","setSortType","useEffect","posts","data","sort","a","b","localeCompare","setData","Search","handleInput","JSON","parse","localStorage","getItem","searchTerm","toLowerCase","trim","filteredPosts","filter","item","includes","memo","activePost","notif","setNotif","showNotif","items","targetPost","find","splice","indexOf","handleNotif","setItem","stringify","newPost","ids","map","Math","max","handlePostId","newData","addNewPost","length","key","App","window","scrollTo","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.69dd2bd5.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\n\nclass Post extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvisible: false,\n\t\t\ttitle: '',\n\t\t\tbody: '',\n\t\t\tid: ''\n\t\t};\n\n\t\tthis.ref = React.createRef('');\n\t}\n\n\tasync componentDidMount() {\n\n\t\tconst observer = new IntersectionObserver(\n\t\t\t([ item ]) => {\n\t\t\t\tif (item.intersectionRatio === 1) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\ttitle: this.props.postData.title,\n\t\t\t\t\t\tbody: this.props.postData.body.replace(/\\n/g, ' '),\n\t\t\t\t\t\tid: this.props.postData.id\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ root: null, rootMargin: '50px', threshold: 1.0 }\n\t\t);\n\n\t\tif (this.ref.current) {\n\t\t\tobserver.observe(this.ref.current);\n\t\t}\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn (\n\t\t\tnextProps.postData !== this.props.postData ||\n\t\t\tnextProps.active !== this.props.active ||\n\t\t\tthis.state !== nextState ||\n\t\t\tthis.state.visible !== nextState.visible\n\t\t);\n\t}\n\n\thandleOnClick = () => {\n\t\tthis.props.setActivePost(this.props.index);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.ref} className={`loading-wrapper ${this.state.visible ? 'visible' : 'hidden'}`}>\n\t\t\t\t{this.state.visible && (\n\t\t\t\t\t<div className={`post ${this.props.active && 'post--active'}`} onClick={this.handleOnClick}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"post__remove\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.props.removePost(this.props.index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t√ó\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<small>ID: {this.state.id}</small>\n\t\t\t\t\t\t{!this.props.active ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<h3>{this.state.title}</h3>\n\t\t\t\t\t\t\t\t<p>{this.state.body}</p>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.title}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ title: e.target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder={'Dodaj naslov'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ body: e.target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.body}\n\t\t\t\t\t\t\t\t\t\tplaceholder={'Dodaj opis'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Post;\n","import React, { PureComponent } from 'react';\n\nclass Loader extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"loader\">\n\t\t\t\t...\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Loader;","import React, { PureComponent } from 'react';\n\nclass Notif extends PureComponent {\n\n\tcomponentDidUpdate() {\n\t\tsetTimeout(() => {\n\t\t\tthis.props.setShowNotif(false);\n\t\t}, 3000);\n\t}\n\n\trender() {\n\t\tif (this.props.show) {\n\t\t\treturn <div style={{background: this.props.color}} className=\"notif\">{this.props.text}</div>;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport default Notif;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction Sort(props) {\n\tconst [ sortType, setSortType ] = useState({\n\t\ttype: 'id',\n\t\tvalue: false\n\t});\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlet posts = [ ...props.data ];\n\n\t\t\tif (sortType.type === 'id') {\n\t\t\t\tsortType.value ? posts.sort((a, b) => a.id - b.id) : posts.sort((a, b) => b.id - a.id);\n\t\t\t} else {\n\t\t\t\tsortType.value\n\t\t\t\t\t? posts.sort((a, b) => a.title.localeCompare(b.title))\n\t\t\t\t\t: posts.sort((a, b) => b.title.localeCompare(a.title));\n\t\t\t}\n\n\t\t\tprops.setData(posts);\n\t\t},\n\t\t[ sortType ]\n\t);\n\n\tconst sortById = () => {\n\t\tsetSortType({\n\t\t\ttype: 'id',\n\t\t\tvalue: !sortType.value\n\t\t});\n\t};\n\n\tconst sortByAlphabet = () => {\n\t\tsetSortType({\n\t\t\ttype: 'letter',\n\t\t\tvalue: !sortType.value\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"sort\">\n\t\t\t<div>\n\t\t\t\tPoredak:&nbsp;\n\t\t\t\t<strong>\n\t\t\t\t\t{sortType.type === 'letter' ? (\n\t\t\t\t\t\t<span>{sortType.value ? <span>A-≈Ω</span> : <span>≈Ω-A</span>}</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span>{sortType.value ? <span>1-10</span> : <span>10-1</span>}</span>\n\t\t\t\t\t)}\n\t\t\t\t</strong>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`btn btn--sort ${sortType.type === 'letter' ? 'btn--active' : ''}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsortByAlphabet();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAbecedno\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`btn btn--sort ${sortType.type === 'id' ? 'btn--active' : ''}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsortById();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tPrema starosti\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Sort;\n","import React, { PureComponent } from 'react';\n\nclass Search extends PureComponent {\n\thandleInput = (e) => {\n\t\tlet posts = JSON.parse(localStorage.getItem('data'));\n\t\tlet searchTerm = e.target.value.toLowerCase().trim();\n\t\tlet filteredPosts = posts.filter(\n\t\t\t(item) => item.title.toLowerCase().includes(searchTerm) || item.body.toLowerCase().includes(searchTerm)\n\t\t);\n\t\tthis.props.setData(filteredPosts);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form className=\"search\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Pretra≈æivanje\"\n\t\t\t\t\tclassName=\"search__input\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.handleInput(e);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport Post from './post';\nimport Loader from './loader';\nimport Notif from './notif';\nimport Sort from './sort';\nimport Search from './search';\n\nconst Index = (props) => {\n\tconst [ data, setData ] = useState(null);\n\tconst [ activePost, setActivePost ] = useState(null);\n\tconst [ notif, setNotif ] = useState({ text: '', type: '', color: '' });\n\tconst [ showNotif, setShowNotif ] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet posts = JSON.parse(localStorage.getItem('data'));\n\t\tsetData(posts);\n\t}, []);\n\n\tconst addNewPost = () => {\n\t\tconst handlePostId = (items) => {\n\t\t\tlet ids = [ ...items ].map((item) => item.id);\n\t\t\treturn (ids = Math.max(...ids) + 1);\n\t\t};\n\n\t\tlet newPost = {\n\t\t\tid: handlePostId(data),\n\t\t\ttitle: 'Nova objava',\n\t\t\tbody: ''\n\t\t};\n\n\t\tlet newData = [ newPost, ...data ];\n\t\thandleNotif(`Dodana nova objava: ID: ${newPost.id}`, 'add', '#4CAF50');\n\t\tsetData(newData);\n\t\tlocalStorage.setItem('data', JSON.stringify(newData));\n\t};\n\n\tconst removePost = (index) => {\n\t\tlet posts = [ ...data ];\n\t\tlet targetPost = posts.find((item) => item.id === index);\n\t\tposts.splice(posts.indexOf(targetPost), 1);\n\t\thandleNotif(`Obrisana objava: ID: ${targetPost.id}`, 'remove', '#F44336');\n\t\tsetData(posts);\n\t\tlocalStorage.setItem('data', JSON.stringify(posts));\n\t};\n\n\tconst handleNotif = (text, type, color) => {\n\t\tsetNotif({\n\t\t\ttext: text,\n\t\t\ttype: type,\n\t\t\tcolor: color\n\t\t});\n\t\tsetShowNotif(true);\n\t};\n\n\tconst mapData = (items) => {\n\t\treturn (\n\t\t\titems &&\n\t\t\t[ ...items ].map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Post\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\tindex={item.id}\n\t\t\t\t\t\tpostData={item}\n\t\t\t\t\t\tactive={activePost === item.id}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tsetActivePost={setActivePost}\n\t\t\t\t\t\tremovePost={removePost}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t};\n\n\tif (data) {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"layout\">\n\t\t\t\t\t<Search data={data} setData={setData} />\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\taddNewPost();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDodaj\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<Sort data={data} setData={setData} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>Broj rezultata: {data.length}</p>\n\t\t\t\t\t<div className=\"posts\">{mapData(data)}</div>\n\t\t\t\t</div>\n\t\t\t\t<Notif\n\t\t\t\t\ttext={notif.text}\n\t\t\t\t\ttype={notif.type}\n\t\t\t\t\tcolor={notif.color}\n\t\t\t\t\tshow={showNotif}\n\t\t\t\t\tsetShowNotif={setShowNotif}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t} else {\n\t\treturn <Loader />;\n\t}\n};\n\nexport default React.memo(Index);\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport data from './posts.json';\n//import KlasnaKomponenta from './components/basic_examples/class_component';\n//import FunkcijskaKomponenta from './components/basic_examples/function_component';\n//import KlasnaKomponentaLifeCycle from './components/basic_examples/class_component_lifecycle';\n//import NestedComponentExample from './components/basic_examples/nesting_example';\n//import FunctionComponentLifecycle from './components/basic_examples/function_component_lifecycle';\n//import InteractionExample from './components/basic_examples/interaction_example';\n//import ComplexData from './components/main_example';\n//import Fragments from './components/fragments'\n//import Update from './components/should_component_update'\n//import Immutability from './components/immutability'\n//import Conditional from './components/conditional_rendering'\n\nimport MainExample from './components/main_example'\n\nfunction App() {\n\n  \n  useEffect(() => {\n    window.scrollTo(0,0);\n    if (!localStorage.getItem('data')) {\n      localStorage.setItem('data', JSON.stringify(data));\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Diplomski rad</h1>\n        <h2>Nikola Miliƒá</h2>\n      </header>\n      <article>\n        <MainExample />\n        {/* <section>\n          <small>Osnovni primjeri komponenti</small>\n          <KlasnaKomponenta value=\"Props klasne komponente\" />\n          <FunkcijskaKomponenta value=\"Props function komponente\" />\n        </section>\n        <section>\n          <small>Osnovni primjeri podkomponenti</small>\n          <NestedComponentExample value=\"Props \t komponente\" />\n\t\t\t\t\t<InteractionExample />\n        </section>\n        <section>\n          <small>≈Ωivotni ciklus komponente</small>\n          <KlasnaKomponentaLifeCycle value={\"Props lifecycle class komponente\"} />\n          <FunctionComponentLifecycle value={\"Props lifecycle class komponente\"} />\n        </section>\n        <section>\n          <small>React.Fragment</small>\n\t\t\t\t\t<Fragments />\n        </section>\n\t\t\t\t<section>\n          <small>shouldComponentUpdate primjer</small>\n\t\t\t\t\t<Update />\n        </section>\n        <section>\n          <small>Immutabiltity</small>\n\t\t\t\t\t<Immutability />\n        </section>\n        <section>\n          <small>Immutabiltity</small>\n\t\t\t\t\t<Immutability />\n        </section>\n\t\t\t\t<section>\n          <small>Kompleksni podaci</small>\n          <ComplexData />\n        </section> */}\n      </article>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}