{"version":3,"sources":["components/basic_examples/class_component.jsx","components/basic_examples/function_component.jsx","components/basic_examples/class_component_lifecycle.jsx","components/basic_examples/subcomponent.jsx","components/basic_examples/nesting_example.jsx","components/basic_examples/function_component_lifecycle.jsx","components/basic_examples/interaction_example.jsx","components/complex_data_examples/complex_data.jsx","components/fragments/no_fragment_example.jsx","components/fragments/fragment_example.jsx","components/fragments/index.jsx","App.js","serviceWorker.js","index.js"],"names":["ClassComponent","className","Component","FunctionComponent","ClassComponentLifecycle","props","state","mounted","this","setState","SubComponent","NestedComponentExample","parent","FunctionComponentLifecycle","useState","setMounted","useEffect","InteractionExample","clicks","onClick","ComplexData","data","setData","setError","fetch","then","response","json","error","console","log","map","item","index","key","src","url","alt","title","NoFragmentExample","FragmentExample","Fragment","Index","App","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"8OAaeA,E,uKATb,OACC,yBAAKC,UAAU,aACd,oEACA,4D,GALyBC,aCUdC,MAVf,WAEC,OACC,yBAAKF,UAAU,aACd,wEACA,6DCqBYG,E,kDAzBd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,SAAS,GAHQ,E,gEAQlBC,KAAKC,SAAS,CAAEF,SAAS,M,+BAIzB,OAAIC,KAAKF,MAAMC,QAEb,yBAAKN,UAAU,aACd,gFACA,mEAIK,S,GArB4BC,aCSvBQ,EATM,SAACL,GACrB,OACC,yBAAKJ,UAAU,aACd,6CACA,uECQYU,E,uKATb,OACC,yBAAKV,UAAU,aACd,kFACA,kBAAC,EAAD,CAAcW,OAAQ,0B,GALWV,a,OCmBtBW,MAnBf,WAAuC,IAAD,EACLC,oBAAS,GADJ,mBAC7BP,EAD6B,KACpBQ,EADoB,KAOrC,OAJAC,qBAAU,WACTD,GAAW,KACT,IAECR,EAEF,yBAAKN,UAAU,aACd,oFACA,mEAIK,MCYMgB,E,kDA3Bd,WAAYZ,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,SAAS,EACTW,OAAQ,GAJS,E,gEASlBV,KAAKC,SAAS,CAAEF,SAAS,M,+BAGhB,IAAD,OACR,OAAIC,KAAKF,MAAMC,QAEb,yBAAKN,UAAU,aACd,iDACA,kEACF,4BAAQkB,QAAS,WAAO,EAAKV,SAAS,CAACS,OAAQ,EAAKZ,MAAMY,OAAS,MAAnE,cAAqFV,KAAKF,MAAMY,SAIzF,S,GAvBuBhB,aCsClBkB,EAtCK,WAAO,IAAD,EACCN,mBAAS,MADV,mBACjBO,EADiB,KACXC,EADW,OAEGR,mBAAS,MAFZ,mBAEVS,GAFU,WAIzBP,qBAAU,WACTQ,MAAM,wDAAwDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAAQF,MACjG,SAACE,GAAD,OAAUL,EAAQK,MAClB,SAACC,GACAL,EAASK,QAGT,IAEHZ,qBACC,WACCa,QAAQC,IAAIT,KAEb,CAAEA,IAcH,OAAIA,EACI,4BAAaA,EAXPU,KAAI,SAACC,EAAMC,GACvB,OACC,wBAAIC,IAAKD,GACR,yBAAKE,IAAKH,EAAKI,IAAKC,IAAKL,EAAKM,QAC9B,4BAAKN,EAAKM,YASN,yCCzBMC,MATf,WACC,OACC,6BACC,uCACA,0CCKYC,MATf,WACC,OACC,kBAAC,IAAMC,SAAP,KACC,uCACA,0CCOYC,MATf,WACC,OACC,iCACC,kBAAC,EAAD,MACA,kBAAC,EAAD,QC2CYC,MAxCf,WACE,OACE,yBAAK1C,UAAU,OACb,4BAAQA,UAAU,cAChB,6CACA,kDAEF,iCAEE,iCACE,8DACA,kBAAC,EAAD,CAAkB2C,MAAM,4BACxB,kBAAC,EAAD,CAAsBA,MAAM,+BAG9B,iCACE,iEACA,kBAAC,EAAD,CAAwBA,MAAM,wBACnC,kBAAC,EAAD,OAGG,iCACE,iEACA,kBAAC,EAAD,CAA2BA,MAAO,qCAClC,kBAAC,EAAD,CAA4BA,MAAO,sCAGrC,iCACE,iDACL,kBAAC,EAAD,OAED,iCACM,iEACA,kBAAC,EAAD,UChCUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhC,MAAK,SAAAiC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhC,GACLC,QAAQD,MAAMA,EAAMiC,a","file":"static/js/main.36982823.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ClassComponent extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"component\">\n\t\t\t\t<h3>Primjer 1: Osnovna klasna komponenta</h3>\n\t\t\t\t<p>Ovo je klasna komponenta</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ClassComponent;","import React from 'react'\n\nfunction FunctionComponent() {\n\n\treturn (\n\t\t<div className=\"component\">\n\t\t\t<h3>Primjer 2: Osnovna funkcijska komponenta</h3>\n\t\t\t<p>Ovo je funkcijska komponenta</p>\n\t\t</div>\n\t)\n}\n\nexport default FunctionComponent\n","import React, { Component } from 'react';\n\nclass ClassComponentLifecycle extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmounted: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({ mounted: true });\n\t}\n\n\trender() {\n\t\tif (this.state.mounted) {\n\t\t\treturn (\n\t\t\t\t<div className=\"component\">\n\t\t\t\t\t<h3>Primjer 3: Životni ciklus klasne komponente</h3>\n\t\t\t\t\t<p>status - komponenta je učitana</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport default ClassComponentLifecycle;\n","import React from 'react';\n\nconst SubComponent = (props) => {\n\treturn (\t\n\t\t<div className=\"component\">\n\t\t\t<h4>Podkomponenta</h4>\n\t\t\t<p>Ovo je ugnježđena komponenta</p>\n\t\t</div>\n\t);\n};\n\nexport default SubComponent;","import React, { Component } from 'react';\nimport SubComponent from './subcomponent';\n\nclass NestedComponentExample extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"component\">\n\t\t\t\t<h3>Komponenta sa ugniježđenom podkomponetom</h3>\n\t\t\t\t<SubComponent parent={'Class komponenta'}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NestedComponentExample;","import React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction FunctionComponentLifecycle() {\n\tconst [ mounted, setMounted ] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetMounted(true);\n\t}, []);\n\n\tif (mounted) {\n\t\treturn (\n\t\t\t<div className=\"component\">\n\t\t\t\t<h3>Primjer 4: Životni ciklus funkcijske komponente</h3>\n\t\t\t\t<p>status - komponenta je učitana</p>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn null\n\t}\n}\n\nexport default FunctionComponentLifecycle;\n","import React, { Component } from 'react';\n\nclass InteractionExample extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmounted: false,\n\t\t\tclicks: 0\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({ mounted: true });\n\t}\n\n\trender() {\n\t\tif (this.state.mounted) {\n\t\t\treturn (\n\t\t\t\t<div className=\"component\">\n\t\t\t\t\t<h3>Klasna komponenta</h3>\n\t\t\t\t\t<p>status - Komponenta je učitana</p>\n\t\t\t<button onClick={() => {this.setState({clicks: this.state.clicks + 1})}}>Klikni me: {this.state.clicks}</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport default InteractionExample;\n","import React, { useState, useEffect } from 'react';\n\nconst ComplexData = () => {\n\tconst [ data, setData ] = useState(null);\n\tconst [ error, setError ] = useState(null);\n\n\tuseEffect(() => {\n\t\tfetch('https://jsonplaceholder.typicode.com/albums/1/photos').then((response) => response.json()).then(\n\t\t\t(json) => setData(json),\n\t\t\t(error) => {\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t);\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log(data);\n\t\t},\n\t\t[ data ]\n\t);\n\n\tconst mapData = (items) => {\n\t\treturn items.map((item, index) => {\n\t\t\treturn (\n\t\t\t\t<li key={index}>\n\t\t\t\t\t<img src={item.url} alt={item.title} />\n\t\t\t\t\t<h4>{item.title}</h4>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t};\n\n\tif (data) {\n\t\treturn <ul>{mapData(data)}</ul>;\n\t} else {\n\t\treturn <div>Loading</div>;\n\t}\n};\n\nexport default ComplexData;\n","import React from 'react'\n\nfunction NoFragmentExample() {\n\treturn (\n\t\t<div>\n\t\t\t<header>...</header>\n\t\t\t<article>...</article>\n\t\t</div>\n\t)\n}\n\nexport default NoFragmentExample\n","import React from 'react'\n\nfunction FragmentExample() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<header>...</header>\n\t\t\t<article>...</article>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default FragmentExample\n","import React from 'react'\nimport NoFragmentExample from './no_fragment_example'\nimport FragmentExample from './fragment_example'\n\nfunction Index() {\n\treturn (\n\t\t<section>\n\t\t\t<NoFragmentExample />\n\t\t\t<FragmentExample />\n\t\t</section>\n\t)\n}\n\nexport default Index\n","import React from 'react';\nimport './App.css';\nimport KlasnaKomponenta from './components/basic_examples/class_component';\nimport FunkcijskaKomponenta from './components/basic_examples/function_component';\nimport KlasnaKomponentaLifeCycle from './components/basic_examples/class_component_lifecycle';\nimport NestedComponentExample from './components/basic_examples/nesting_example';\nimport FunctionComponentLifecycle from './components/basic_examples/function_component_lifecycle';\nimport InteractionExample from './components/basic_examples/interaction_example';\nimport ComplexData from './components/complex_data_examples/complex_data';\nimport Fragments from './components/fragments'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Diplomski rad</h1>\n        <h2>Nikola Milić</h2>\n      </header>\n      <article>\n        {/* Basic examples */}\n        <section>\n          <small>Osnovni primjeri komponenti</small>\n          <KlasnaKomponenta value=\"Props klasne komponente\" />\n          <FunkcijskaKomponenta value=\"Props function komponente\" />\n        </section>\n        {/* Nesting examples */}\n        <section>\n          <small>Osnovni primjeri podkomponenti</small>\n          <NestedComponentExample value=\"Props \t komponente\" />\n\t\t\t\t\t<InteractionExample />\n        </section>\n        {/* Lifecylce examples */}\n        <section>\n          <small>Životni ciklus komponente</small>\n          <KlasnaKomponentaLifeCycle value={\"Props lifecycle class komponente\"} />\n          <FunctionComponentLifecycle value={\"Props lifecycle class komponente\"} />\n        </section>\n\t\t\t\t{/* Fragments examples */}\n        <section>\n          <small>React.Fragment</small>\n\t\t\t\t\t<Fragments />\n        </section>\n\t\t\t\t<section>\n          <small>Životni ciklus komponente</small>\n          <ComplexData />\n        </section>\n      </article>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}