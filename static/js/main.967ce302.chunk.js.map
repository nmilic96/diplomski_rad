{"version":3,"sources":["components/main_example/post.jsx","components/main_example/loader.jsx","components/main_example/sort.jsx","functions/functions.jsx","components/main_example/search.jsx","components/main_example/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Post","props","handleOnClick","setActivePost","postData","id","state","visible","action","title","body","ref","React","createRef","observer","IntersectionObserver","intersectionRatio","setState","replace","root","rootMargin","threshold","this","current","setTimeout","observe","nextProps","nextState","active","data","item","find","setData","setAction","className","onClick","removePost","Fragment","type","defaultValue","onChange","e","target","value","placeholder","Component","Loader","PureComponent","memo","useState","sortType","setSortType","useEffect","posts","sort","a","b","localeCompare","debounce","func","wait","timeout","args","later","clearTimeout","useRef","searchTerm","toLowerCase","trim","filteredPosts","JSON","parse","localStorage","getItem","filter","includes","handleInput","activePost","setItem","stringify","postsData","items","index","newData","ids","map","Math","max","handlePostId","addNewPost","length","key","App","window","scrollTo","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.967ce302.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\n\nclass Post extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvisible: false,\n\t\t\taction: null,\n\t\t\ttitle: '',\n\t\t\tbody: '',\n\t\t\tid: ''\n\t\t};\n\n\t\tthis.ref = React.createRef('');\n\t}\n\n\tasync componentDidMount() {\n\t\tconst observer = new IntersectionObserver(\n\t\t\t([ item ]) => {\n\t\t\t\tif (item.intersectionRatio === 1) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\ttitle: this.props.postData.title,\n\t\t\t\t\t\tbody: this.props.postData.body.replace(/\\n/g, ' '),\n\t\t\t\t\t\tid: this.props.postData.id\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ root: null, rootMargin: '100px', threshold: 1.0 }\n\t\t);\n\n\t\tif (this.ref.current) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tobserver.observe(this.ref.current);\n\t\t\t}, 10);\n\t\t}\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn (\n\t\t\tnextProps.postData !== this.props.postData ||\n\t\t\tnextProps.active !== this.props.active ||\n\t\t\tthis.state !== nextState ||\n\t\t\tthis.state.visible !== nextState.visible\n\t\t);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.action) {\n\t\t\tlet data = [ ...this.props.data ];\n\t\t\tlet item = data.find((item) => item.id === this.state.id);\n\t\t\titem.title = this.state.title;\n\t\t\titem.body = this.state.body;\n\t\t\tthis.props.setData(data);\n\t\t\tthis.props.setAction('update');\n\n\t\t\treturn () => {\n\t\t\t\tthis.setState({ action: null });\n\t\t\t};\n\t\t}\n\t}\n\n\n\thandleOnClick = () => {\n\t\tthis.props.setActivePost(this.props.postData.id);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.ref} className={`loading-wrapper ${this.state.visible ? 'visible' : 'hidden'}`}>\n\t\t\t\t{this.state.visible && (\n\t\t\t\t\t<div className={`post ${this.props.active && 'post--active'}`} onClick={this.handleOnClick}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"post__remove\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.props.removePost(this.props.postData.id);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t√ó\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<small>ID: {this.state.id}</small>\n\t\t\t\t\t\t{!this.props.active ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<h3>{this.state.title}</h3>\n\t\t\t\t\t\t\t\t<p>{this.state.body}</p>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.title}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ title: e.target.value, action: 'update' });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder={'Dodaj naslov'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ body: e.target.value, action: 'update' });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.body}\n\t\t\t\t\t\t\t\t\t\tplaceholder={'Dodaj opis'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Post;\n","import React, { PureComponent } from 'react';\n\nclass Loader extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"loader\">\n\t\t\t\t...\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Loader;","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction Sort(props) {\n\tconst [ sortType, setSortType ] = useState({\n\t\ttype: 'id',\n\t\tvalue: false\n\t});\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlet posts = [ ...props.data ];\n\n\t\t\tif (sortType.type === 'id') {\n\t\t\t\tsortType.value ? posts.sort((a, b) => a.id - b.id) : posts.sort((a, b) => b.id - a.id);\n\t\t\t} else {\n\t\t\t\tsortType.value\n\t\t\t\t\t? posts.sort((a, b) => a.title.localeCompare(b.title))\n\t\t\t\t\t: posts.sort((a, b) => b.title.localeCompare(a.title));\n\t\t\t}\n\n\t\t\tprops.setData(posts);\n\t\t},\n\t\t[ sortType ]\n\t);\n\n\tconst sortById = () => {\n\t\tsetSortType({\n\t\t\ttype: 'id',\n\t\t\tvalue: !sortType.value\n\t\t});\n\t};\n\n\tconst sortByAlphabet = () => {\n\t\tsetSortType({\n\t\t\ttype: 'letter',\n\t\t\tvalue: !sortType.value\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"sort\">\n\t\t\t<div>\n\t\t\t\tPoredak:&nbsp;\n\t\t\t\t<strong>\n\t\t\t\t\t{sortType.type === 'letter' ? (\n\t\t\t\t\t\t<span>{sortType.value ? <span>A-≈Ω</span> : <span>≈Ω-A</span>}</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span>{sortType.value ? <span>1-10</span> : <span>10-1</span>}</span>\n\t\t\t\t\t)}\n\t\t\t\t</strong>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`btn btn--sort ${sortType.type === 'letter' ? 'btn--active' : ''}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsortByAlphabet();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAbecedno\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName={`btn btn--sort ${sortType.type === 'id' ? 'btn--active' : ''}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsortById();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tPrema starosti\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default React.memo(Sort);\n","export const debounce = (func, wait) => {\n\tlet timeout;\n\n\treturn function executedFunction(...args) {\n\t\tconst later = () => {\n\t\t\tclearTimeout(timeout);\n\t\t\tfunc(...args);\n\t\t};\n\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t};\n};","import React, { useRef } from 'react';\nimport { debounce } from '../../functions/functions';\n\nconst Search = (props) => {\n\tconst ref = useRef('');\n\n\tconst handleInput = (e) => {\n\t\tif (ref.current) {\n\t\t\tlet searchTerm = ref.current.value.toLowerCase().trim();\n\t\t\tlet posts = JSON.parse(localStorage.getItem('data'));\n\t\t\tlet filteredPosts = posts.filter(\n\t\t\t\t(item) => item.title.toLowerCase().includes(searchTerm) || item.body.toLowerCase().includes(searchTerm)\n\t\t\t);\n\t\t\tprops.setData(filteredPosts);\n\t\t}\n\t};\n\n\treturn (\n\t\t<form className=\"search\">\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Pretra≈æivanje\"\n\t\t\t\tclassName=\"search__input\"\n\t\t\t\tonChange={debounce((e) => {\n\t\t\t\t\thandleInput(e)\n\t\t\t\t}, 220)}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default React.memo(Search);\n","import React, { useState, useEffect } from 'react';\nimport Post from './post';\nimport Loader from './loader';\nimport Sort from './sort';\nimport Search from './search';\nimport postsData from '../../posts.json';\n\nconst Index = () => {\n\tconst [ data, setData ] = useState([]);\n\tconst [ activePost, setActivePost ] = useState(null);\n\tconst [ action, setAction ] = useState(null);\n\n\tuseEffect(() => {\n\t\tif (!localStorage.getItem('data')) {\n\t\t\tlocalStorage.setItem('data', JSON.stringify(postsData));\n\t\t\tsetData(postsData);\n\t\t} else {\n\t\t\tsetData(JSON.parse(localStorage.getItem('data')));\n\t\t}\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (action) {\n\t\t\t\tlocalStorage.setItem('data', JSON.stringify(data));\n\t\t\t}\n\n\t\t\treturn () => {\n\t\t\t\tsetAction(null);\n\t\t\t};\n\t\t},\n\t\t[ data ]\n\t);\n\n\tconst addNewPost = () => {\n\t\tconst handlePostId = (items) => {\n\t\t\tlet ids = [ ...items ].map((item) => item.id);\n\t\t\treturn (ids = Math.max(...ids) + 1);\n\t\t};\n\n\t\tlet newPost = {\n\t\t\tid: handlePostId(data),\n\t\t\ttitle: 'Nova objava',\n\t\t\tbody: ''\n\t\t};\n\n\t\tlet newData = [ newPost, ...data ];\n\t\tsetData(newData);\n\t\tsetAction('add');\n\t};\n\n\tconst removePost = (index) => {\n\t\tlet filteredPosts = data.filter((item) => item.id !== index);\n\t\tsetData(filteredPosts);\n\t\tsetAction('remove');\n\t};\n\n\tconst mapData = (items) => {\n\t\treturn (\n\t\t\titems &&\n\t\t\titems.map((item, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Post\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tpostData={item}\n\t\t\t\t\t\tactive={activePost === item.id}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tsetData={setData}\n\t\t\t\t\t\tsetAction={setAction}\n\t\t\t\t\t\tsetActivePost={setActivePost}\n\t\t\t\t\t\tremovePost={removePost}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t};\n\n\tif (data) {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"layout\">\n\t\t\t\t\t<Search data={data} setData={setData} />\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\taddNewPost();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDodaj\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<Sort data={data} setData={setData} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>Broj rezultata: {data.length}</p>\n\t\t\t\t\t<div className=\"posts\">{mapData(data)}</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t} else {\n\t\treturn <Loader />;\n\t}\n};\n\nexport default React.memo(Index);\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport data from './posts.json';\n//import KlasnaKomponenta from './components/basic_examples/class_component';\n//import FunkcijskaKomponenta from './components/basic_examples/function_component';\n//import KlasnaKomponentaLifeCycle from './components/basic_examples/class_component_lifecycle';\n//import NestedComponentExample from './components/basic_examples/nesting_example';\n//import FunctionComponentLifecycle from './components/basic_examples/function_component_lifecycle';\n//import InteractionExample from './components/basic_examples/interaction_example';\n//import ComplexData from './components/main_example';\n//import Fragments from './components/fragments'\n//import Update from './components/should_component_update'\n//import Immutability from './components/immutability'\n//import Conditional from './components/conditional_rendering'\n\nimport MainExample from './components/main_example';\n\nfunction App() {\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>Diplomski rad</h1>\n\t\t\t\t<h2>Nikola Miliƒá</h2>\n\t\t\t</header>\n\t\t\t<MainExample />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}